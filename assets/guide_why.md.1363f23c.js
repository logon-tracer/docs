import{_ as e,c as t,o as r,d as a}from"./app.4ac00756.js";const o="/log_template.png",u=JSON.parse('{"title":"Why LogonTracer?","description":"","frontmatter":{},"headers":[{"level":2,"title":"The need for a Spring native log alarm","slug":"the-need-for-a-spring-native-log-alarm","link":"#the-need-for-a-spring-native-log-alarm","children":[]}],"relativePath":"guide/why.md","lastUpdated":1671423673000}'),n={name:"guide/why.md"},i=a('<h1 id="why-logontracer" tabindex="-1">Why LogonTracer? <a class="header-anchor" href="#why-logontracer" aria-hidden="true">#</a></h1><div class="tip custom-block"><p class="custom-block-title">NOTE</p><p>This guide assumes that you are familiar with Spring. A good way to start learning more is to read the <a href="https://spring.io/why-spring" target="_blank" rel="noreferrer">Why Spring Guide</a>, and <a href="https://tanzu.vmware.com/content/springone-platform-2017/from-zero-to-hero-with-spring-boot-brian-clozel" target="_blank" rel="noreferrer">SpringBoot from zero to one</a>, a stream where <a href="https://twitter.com/bclozel" target="_blank" rel="noreferrer">Brian Clozel</a> did a demo explaining the main useing.</p></div><h2 id="the-need-for-a-spring-native-log-alarm" tabindex="-1">The need for a Spring native log alarm <a class="header-anchor" href="#the-need-for-a-spring-native-log-alarm" aria-hidden="true">#</a></h2><p>Spring&#39;s out-of-the-box support for common web patterns, features like Inversion of Controland Dependency Injection, and its many plugins and integrations are fostering a vibrant ecosystem.Its dev and build story are key to its success. Spring&#39;s log alarm story hasn&#39;t been clear though.</p><p>Viewing logs during development can directly console, quickly and accurately catch errors. However, once the development is gradually completed and an error occurs on the deployment server, it is difficult to quickly know or even locate the log generated by the error. If we catch some unexpected errors in Spring App, and send emails to inform developers, then this can help developers quickly locate and solve the error.</p><p>Given Log4j2 and LogBack or Log4j massive adoption, LogonTracer provides a compatible API can be perfectly compatible with any of them without distinction. And has an out-of-the-box email template, which can accurately inform the developer of the detailed location of the error.</p><p><img src="'+o+'" alt="log template"></p><p>LogonTracer aims to position itself as the Log alarm of choice for Spring projects, and as a solid alternative even for projects not using Spring.</p><p>Continue reading in the <a href="./index.html">Getting Started Guide</a>.</p>',9),s=[i];function l(c,d,p,h,g,m){return r(),t("div",null,s)}const _=e(n,[["render",l]]);export{u as __pageData,_ as default};
